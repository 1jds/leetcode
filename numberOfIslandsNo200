/**
 * @param {character[][]} grid
 * @return {number}
 */
var numIslands = function (grid) {
  let columnLength = grid.length;
  let rowLength = grid[0].length;
  let sets = [];
  for (let i = 0; i < columnLength; i++) {
    for (let j = 0; j < rowLength; j++) {
      if (grid[i][j] === "1") {
        if (sets.length === 0) {
          sets[0] = [{ x: i, y: j }];
        } else {
          if (grid[i - 1] && grid[i - 1][j] && grid[i - 1][j] === "1") {
            let length = sets.length;
            for (let k = 0; k < length; k++) {
              let itemLength = sets[k].length;
              for (let m = 0; m < itemLength; m++) {
                if (sets[k][m].x === i - 1 && sets[k][m].y === j) {
                  sets[k].push({ x: i, y: j });
                  break;
                }
              }
            }
          }
          // if (grid[i + 1] && grid[i + 1][j] && grid[i + 1][j] === "1") {
          //   let length = sets.length;
          //   for (let k = 0; k < length; k++) {
          //     let itemLength = sets[k].length;
          //     for (let m = 0; m < itemLength; m++) {
          //       if (sets[k][m].x === i + 1 && sets[k][m].y === j) {
          //         sets[k].push({ x: i, y: j });
          //         break;
          //       }
          //     }
          //   }
          // }
          else if (grid[i] && grid[i][j - 1] && grid[i][j - 1] === "1") {
            let length = sets.length;
            for (let k = 0; k < length; k++) {
              let itemLength = sets[k].length;
              for (let m = 0; m < itemLength; m++) {
                if (sets[k][m].x === i && sets[k][m].y === j - 1) {
                  sets[k].push({ x: i, y: j });
                  break;
                }
              }
            }
          } else {
          }

          // if (grid[i] && grid[i][j + 1] && grid[i][j + 1] === "1") {
          //   let length = sets.length;
          //   for (let k = 0; k < length; k++) {
          //     let itemLength = sets[k].length;
          //     for (let m = 0; m < itemLength; m++) {
          //       if (sets[k][m].x === i && sets[k][m].y === j + 1) {
          //         sets[k].push({ x: i, y: j });
          //         break;
          //       }
          //     }
          //   }
          // }
        }
      }
    }
  }
  console.log(sets);
  return sets.length;
};

console.log(
  numIslands([
    ["1", "1", "0", "0", "0"],
    ["1", "1", "0", "0", "0"],
    ["0", "0", "1", "0", "0"],
    ["0", "0", "0", "1", "1"],
  ])
);

// Example 1:
// Input: grid = [
//   ["1","1","1","1","0"],
//   ["1","1","0","1","0"],
//   ["1","1","0","0","0"],
//   ["0","0","0","0","0"]
// ]
// Output: 1

// Example 2:
// Input: grid = [
//   ["1","1","0","0","0"],
//   ["1","1","0","0","0"],
//   ["0","0","1","0","0"],
//   ["0","0","0","1","1"]
// ]
// Output: 3
